{"version":3,"sources":["Form.js","App.js","index.js"],"names":["MyTextInput","label","props","useField","field","meta","htmlFor","name","touched","error","className","MyCheckbox","children","type","CustomForm","initialValues","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","id","autoComplete","component","as","value","App","Form","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAGMA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,2BACnBC,YAASD,GADU,mBAClCE,EADkC,KAC3BC,EAD2B,KAEzC,OACE,qCACE,uBAAOC,QAASJ,EAAMK,KAAtB,SAA6BN,IAC7B,iDAAWG,GAAWF,IACrBG,EAAKG,SAAWH,EAAKI,MACpB,qBAAKC,UAAU,QAAf,SAAwBL,EAAKI,QAC3B,SAKNE,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaV,EAAY,8BACrBC,YAAS,2BAAKD,GAAN,IAAaW,KAAM,cADN,mBACpCT,EADoC,KAC7BC,EAD6B,KAE3C,OACE,qCACE,wBAAOK,UAAU,WAAjB,UACI,+CAAOG,KAAK,YAAeT,GAAWF,IACrCU,KAEJP,EAAKG,SAAWH,EAAKI,MACpB,qBAAKC,UAAU,QAAf,SAAwBL,EAAKI,QAC3B,SAwFGK,EAnFI,WAEf,OACI,cAAC,IAAD,CACAC,cAAiB,CACbR,KAAM,GACNS,MAAO,GACPC,OAAQ,EACRC,SAAU,GACVC,KAAM,GACNC,OAAO,GAEXC,iBAAoBC,IAAW,CAC3Bf,KAAMe,MACGC,IAAI,EAAG,2KACPC,SAAS,sGAClBR,MAAOM,MACEN,MAAM,iHACNQ,SAAS,sGAClBP,OAAQK,MACCE,SAAS,qGACTD,IAAI,EAAG,iDAChBL,SAAUI,MAAaE,SAAS,yFAChCL,KAAMG,MACGC,IAAI,GAAI,mGACjBH,MAAOE,MACEE,SAAS,iHACTC,MAAM,EAAC,GAAO,mHAE3BC,SAAY,SAAAC,GAAM,OAAIC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAQ,KAAM,KA1B/D,SA4BI,eAAC,IAAD,CAAMjB,UAAU,OAAhB,UACI,uKACA,cAAC,EAAD,CACIT,MAAM,8CACN+B,GAAG,OACHzB,KAAK,OACLM,KAAK,OACLoB,aAAa,QAEjB,cAAC,EAAD,CACIhC,MAAM,0DACN+B,GAAG,QACHzB,KAAK,QACLM,KAAK,QACLoB,aAAa,QAEjB,uBAAO3B,QAAQ,SAAf,0EACA,cAAC,IAAD,CACI0B,GAAG,SACHzB,KAAK,SACLM,KAAK,SACLoB,aAAa,QAEjB,cAAC,IAAD,CAAcC,UAAU,MAAMxB,UAAU,QAAQH,KAAK,WACrD,uBAAOD,QAAQ,WAAf,kDACA,eAAC,IAAD,CACI0B,GAAG,WACHzB,KAAK,WACL4B,GAAG,SAHP,UAKQ,wBAAQC,MAAM,GAAd,mGACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAER,cAAC,IAAD,CAAcF,UAAU,MAAMxB,UAAU,QAAQH,KAAK,aACrD,uBAAOD,QAAQ,OAAf,6FACA,cAAC,IAAD,CACI0B,GAAG,OACHzB,KAAK,OACL4B,GAAG,aAEP,cAAC,IAAD,CAAcD,UAAU,MAAMxB,UAAU,QAAQH,KAAK,SACrD,cAAC,EAAD,CAAYA,KAAK,QAAjB,kQAGA,wBAAQM,KAAK,SAAb,0ECjGDwB,MARf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACI,cAAC4B,EAAD,OCFRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b576be1f.chunk.js","sourcesContent":["import { Formik, Field, Form, ErrorMessage, useField } from 'formik';\nimport * as Yup from 'yup';\n\nconst MyTextInput = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <label htmlFor={props.name}>{label}</label>\n        <input {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\n    return (\n      <>\n        <label className=\"checkbox\">\n            <input type=\"checkbox\" {...field} {...props} />\n            {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n\nconst CustomForm = () => {\n\n    return (\n        <Formik\n        initialValues = {{\n            name: '',\n            email: '',\n            amount: 0,\n            currency: '',\n            text: '',\n            terms: false\n        }}\n        validationSchema = {Yup.object({\n            name: Yup.string()\n                    .min(2, 'Минимум 2 символа для заполнения')\n                    .required('Обязательное поле!'),\n            email: Yup.string()\n                    .email('Неправильный email адрес')\n                    .required('Обязательное поле!'),\n            amount: Yup.number()\n                    .required('Сумма обязательна')\n                    .min(5, 'Не менее 5'),\n            currency: Yup.string().required('Выберите валюту'),\n            text: Yup.string()\n                    .min(10, 'Не менее 10 символов'),\n            terms: Yup.boolean()\n                    .required('Необходимо согласие')\n                    .oneOf([true], \"Необходимо согласие\")\n        })}\n        onSubmit = {values => console.log(JSON.stringify(values, null, 2))}\n        >\n            <Form className=\"form\">\n                <h2>Отправить пожертвование</h2>\n                <MyTextInput\n                    label=\"Ваше имя\"\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                />\n                <MyTextInput\n                    label=\"Ваша почта\"\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"off\"\n                />\n                <label htmlFor=\"amount\">Количество</label>\n                <Field\n                    id=\"amount\"\n                    name=\"amount\"\n                    type=\"number\"\n                    autoComplete=\"off\"\n                />\n                <ErrorMessage component=\"div\" className=\"error\" name=\"amount\"/>\n                <label htmlFor=\"currency\">Валюта</label>\n                <Field\n                    id=\"currency\"\n                    name=\"currency\"\n                    as=\"select\"\n                    >\n                        <option value=\"\">Выберите валюту</option>\n                        <option value=\"USD\">USD</option>\n                        <option value=\"UAH\">UAH</option>\n                        <option value=\"RUB\">RUB</option>\n                </Field>\n                <ErrorMessage component=\"div\" className=\"error\" name=\"currency\"/>\n                <label htmlFor=\"text\">Ваше сообщение</label>\n                <Field \n                    id=\"text\"\n                    name=\"text\"\n                    as=\"textarea\"\n                />\n                <ErrorMessage component=\"div\" className=\"error\" name=\"text\"/>\n                <MyCheckbox name=\"terms\">\n                    Соглашаетесь с политикой конфиденциальности?\n                </MyCheckbox>\n                <button type=\"submit\">Отправить</button>\n            </Form>\n        </Formik>\n    )\n}\n\nexport default CustomForm;","import './app.scss';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}